// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csgo_netmessages.proto

package skadistats.clarity.wire.csgo.proto;

public final class CsGoNetMessages {
  private CsGoNetMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code SVC_Messages_CsGo}
   */
  public enum SVC_Messages_CsGo
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>svc_PaintmapData = 33;</code>
     */
    svc_PaintmapData(0, 33),
    /**
     * <code>svc_CmdKeyValues = 34;</code>
     */
    svc_CmdKeyValues(1, 34),
    /**
     * <code>svc_EncryptedData = 35;</code>
     */
    svc_EncryptedData(2, 35),
    /**
     * <code>svc_HltvReplay = 36;</code>
     */
    svc_HltvReplay(3, 36),
    /**
     * <code>svc_Broadcast_Command = 38;</code>
     */
    svc_Broadcast_Command(4, 38),
    ;

    /**
     * <code>svc_PaintmapData = 33;</code>
     */
    public static final int svc_PaintmapData_VALUE = 33;
    /**
     * <code>svc_CmdKeyValues = 34;</code>
     */
    public static final int svc_CmdKeyValues_VALUE = 34;
    /**
     * <code>svc_EncryptedData = 35;</code>
     */
    public static final int svc_EncryptedData_VALUE = 35;
    /**
     * <code>svc_HltvReplay = 36;</code>
     */
    public static final int svc_HltvReplay_VALUE = 36;
    /**
     * <code>svc_Broadcast_Command = 38;</code>
     */
    public static final int svc_Broadcast_Command_VALUE = 38;


    public final int getNumber() { return value; }

    public static SVC_Messages_CsGo valueOf(int value) {
      switch (value) {
        case 33: return svc_PaintmapData;
        case 34: return svc_CmdKeyValues;
        case 35: return svc_EncryptedData;
        case 36: return svc_HltvReplay;
        case 38: return svc_Broadcast_Command;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages_CsGo>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages_CsGo>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SVC_Messages_CsGo>() {
            public SVC_Messages_CsGo findValueByNumber(int number) {
              return SVC_Messages_CsGo.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.getDescriptor().getEnumTypes().get(0);
    }

    private static final SVC_Messages_CsGo[] VALUES = values();

    public static SVC_Messages_CsGo valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SVC_Messages_CsGo(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SVC_Messages_CsGo)
  }

  public interface CSVCMsg_ServerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSVCMsg_ServerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 protocol = 1;</code>
     *
     * <pre>
     * protocol version
     * </pre>
     */
    boolean hasProtocol();
    /**
     * <code>optional int32 protocol = 1;</code>
     *
     * <pre>
     * protocol version
     * </pre>
     */
    int getProtocol();

    /**
     * <code>optional int32 server_count = 2;</code>
     *
     * <pre>
     * number of changelevels since server start
     * </pre>
     */
    boolean hasServerCount();
    /**
     * <code>optional int32 server_count = 2;</code>
     *
     * <pre>
     * number of changelevels since server start
     * </pre>
     */
    int getServerCount();

    /**
     * <code>optional bool is_dedicated = 3;</code>
     *
     * <pre>
     * dedicated server ?
     * </pre>
     */
    boolean hasIsDedicated();
    /**
     * <code>optional bool is_dedicated = 3;</code>
     *
     * <pre>
     * dedicated server ?
     * </pre>
     */
    boolean getIsDedicated();

    /**
     * <code>optional bool is_official_valve_server = 4;</code>
     */
    boolean hasIsOfficialValveServer();
    /**
     * <code>optional bool is_official_valve_server = 4;</code>
     */
    boolean getIsOfficialValveServer();

    /**
     * <code>optional bool is_hltv = 5;</code>
     *
     * <pre>
     * HLTV server ?
     * </pre>
     */
    boolean hasIsHltv();
    /**
     * <code>optional bool is_hltv = 5;</code>
     *
     * <pre>
     * HLTV server ?
     * </pre>
     */
    boolean getIsHltv();

    /**
     * <code>optional bool is_replay = 6;</code>
     *
     * <pre>
     * Replay server ?
     * </pre>
     */
    boolean hasIsReplay();
    /**
     * <code>optional bool is_replay = 6;</code>
     *
     * <pre>
     * Replay server ?
     * </pre>
     */
    boolean getIsReplay();

    /**
     * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
     *
     * <pre>
     * // Will be redirecting to proxy relay
     * </pre>
     */
    boolean hasIsRedirectingToProxyRelay();
    /**
     * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
     *
     * <pre>
     * // Will be redirecting to proxy relay
     * </pre>
     */
    boolean getIsRedirectingToProxyRelay();

    /**
     * <code>optional int32 c_os = 7;</code>
     *
     * <pre>
     * L = linux, W = Win32
     * </pre>
     */
    boolean hasCOs();
    /**
     * <code>optional int32 c_os = 7;</code>
     *
     * <pre>
     * L = linux, W = Win32
     * </pre>
     */
    int getCOs();

    /**
     * <code>optional fixed32 map_crc = 8;</code>
     *
     * <pre>
     * server map CRC
     * </pre>
     */
    boolean hasMapCrc();
    /**
     * <code>optional fixed32 map_crc = 8;</code>
     *
     * <pre>
     * server map CRC
     * </pre>
     */
    int getMapCrc();

    /**
     * <code>optional fixed32 client_crc = 9;</code>
     *
     * <pre>
     * client.dll CRC server is using
     * </pre>
     */
    boolean hasClientCrc();
    /**
     * <code>optional fixed32 client_crc = 9;</code>
     *
     * <pre>
     * client.dll CRC server is using
     * </pre>
     */
    int getClientCrc();

    /**
     * <code>optional fixed32 string_table_crc = 10;</code>
     *
     * <pre>
     * string table CRC server is using
     * </pre>
     */
    boolean hasStringTableCrc();
    /**
     * <code>optional fixed32 string_table_crc = 10;</code>
     *
     * <pre>
     * string table CRC server is using
     * </pre>
     */
    int getStringTableCrc();

    /**
     * <code>optional int32 max_clients = 11;</code>
     *
     * <pre>
     * max number of clients on server
     * </pre>
     */
    boolean hasMaxClients();
    /**
     * <code>optional int32 max_clients = 11;</code>
     *
     * <pre>
     * max number of clients on server
     * </pre>
     */
    int getMaxClients();

    /**
     * <code>optional int32 max_classes = 12;</code>
     *
     * <pre>
     * max number of server classes
     * </pre>
     */
    boolean hasMaxClasses();
    /**
     * <code>optional int32 max_classes = 12;</code>
     *
     * <pre>
     * max number of server classes
     * </pre>
     */
    int getMaxClasses();

    /**
     * <code>optional int32 player_slot = 13;</code>
     *
     * <pre>
     * our client slot number
     * </pre>
     */
    boolean hasPlayerSlot();
    /**
     * <code>optional int32 player_slot = 13;</code>
     *
     * <pre>
     * our client slot number
     * </pre>
     */
    int getPlayerSlot();

    /**
     * <code>optional float tick_interval = 14;</code>
     *
     * <pre>
     * server tick interval
     * </pre>
     */
    boolean hasTickInterval();
    /**
     * <code>optional float tick_interval = 14;</code>
     *
     * <pre>
     * server tick interval
     * </pre>
     */
    float getTickInterval();

    /**
     * <code>optional string game_dir = 15;</code>
     *
     * <pre>
     * game directory eg "tf2"
     * </pre>
     */
    boolean hasGameDir();
    /**
     * <code>optional string game_dir = 15;</code>
     *
     * <pre>
     * game directory eg "tf2"
     * </pre>
     */
    java.lang.String getGameDir();
    /**
     * <code>optional string game_dir = 15;</code>
     *
     * <pre>
     * game directory eg "tf2"
     * </pre>
     */
    com.google.protobuf.ByteString
        getGameDirBytes();

    /**
     * <code>optional string map_name = 16;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    boolean hasMapName();
    /**
     * <code>optional string map_name = 16;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    java.lang.String getMapName();
    /**
     * <code>optional string map_name = 16;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapNameBytes();

    /**
     * <code>optional string map_group_name = 17;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    boolean hasMapGroupName();
    /**
     * <code>optional string map_group_name = 17;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    java.lang.String getMapGroupName();
    /**
     * <code>optional string map_group_name = 17;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    com.google.protobuf.ByteString
        getMapGroupNameBytes();

    /**
     * <code>optional string sky_name = 18;</code>
     *
     * <pre>
     * name of current skybox
     * </pre>
     */
    boolean hasSkyName();
    /**
     * <code>optional string sky_name = 18;</code>
     *
     * <pre>
     * name of current skybox
     * </pre>
     */
    java.lang.String getSkyName();
    /**
     * <code>optional string sky_name = 18;</code>
     *
     * <pre>
     * name of current skybox
     * </pre>
     */
    com.google.protobuf.ByteString
        getSkyNameBytes();

    /**
     * <code>optional string host_name = 19;</code>
     *
     * <pre>
     * server name
     * </pre>
     */
    boolean hasHostName();
    /**
     * <code>optional string host_name = 19;</code>
     *
     * <pre>
     * server name
     * </pre>
     */
    java.lang.String getHostName();
    /**
     * <code>optional string host_name = 19;</code>
     *
     * <pre>
     * server name
     * </pre>
     */
    com.google.protobuf.ByteString
        getHostNameBytes();

    /**
     * <code>optional uint64 ugc_map_id = 22;</code>
     */
    boolean hasUgcMapId();
    /**
     * <code>optional uint64 ugc_map_id = 22;</code>
     */
    long getUgcMapId();
  }
  /**
   * Protobuf type {@code CSVCMsg_ServerInfo}
   */
  public static final class CSVCMsg_ServerInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CSVCMsg_ServerInfo)
      CSVCMsg_ServerInfoOrBuilder {
    // Use CSVCMsg_ServerInfo.newBuilder() to construct.
    private CSVCMsg_ServerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSVCMsg_ServerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSVCMsg_ServerInfo defaultInstance;
    public static CSVCMsg_ServerInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CSVCMsg_ServerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSVCMsg_ServerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              protocol_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serverCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isDedicated_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isOfficialValveServer_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              isHltv_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isReplay_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000080;
              cOs_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000100;
              mapCrc_ = input.readFixed32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000200;
              clientCrc_ = input.readFixed32();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000400;
              stringTableCrc_ = input.readFixed32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000800;
              maxClients_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00001000;
              maxClasses_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00002000;
              playerSlot_ = input.readInt32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00004000;
              tickInterval_ = input.readFloat();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              gameDir_ = bs;
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              mapName_ = bs;
              break;
            }
            case 138: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00020000;
              mapGroupName_ = bs;
              break;
            }
            case 146: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00040000;
              skyName_ = bs;
              break;
            }
            case 154: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00080000;
              hostName_ = bs;
              break;
            }
            case 168: {
              bitField0_ |= 0x00000040;
              isRedirectingToProxyRelay_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00100000;
              ugcMapId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_ServerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_ServerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo.class, skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CSVCMsg_ServerInfo> PARSER =
        new com.google.protobuf.AbstractParser<CSVCMsg_ServerInfo>() {
      public CSVCMsg_ServerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSVCMsg_ServerInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSVCMsg_ServerInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PROTOCOL_FIELD_NUMBER = 1;
    private int protocol_;
    /**
     * <code>optional int32 protocol = 1;</code>
     *
     * <pre>
     * protocol version
     * </pre>
     */
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 protocol = 1;</code>
     *
     * <pre>
     * protocol version
     * </pre>
     */
    public int getProtocol() {
      return protocol_;
    }

    public static final int SERVER_COUNT_FIELD_NUMBER = 2;
    private int serverCount_;
    /**
     * <code>optional int32 server_count = 2;</code>
     *
     * <pre>
     * number of changelevels since server start
     * </pre>
     */
    public boolean hasServerCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 server_count = 2;</code>
     *
     * <pre>
     * number of changelevels since server start
     * </pre>
     */
    public int getServerCount() {
      return serverCount_;
    }

    public static final int IS_DEDICATED_FIELD_NUMBER = 3;
    private boolean isDedicated_;
    /**
     * <code>optional bool is_dedicated = 3;</code>
     *
     * <pre>
     * dedicated server ?
     * </pre>
     */
    public boolean hasIsDedicated() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_dedicated = 3;</code>
     *
     * <pre>
     * dedicated server ?
     * </pre>
     */
    public boolean getIsDedicated() {
      return isDedicated_;
    }

    public static final int IS_OFFICIAL_VALVE_SERVER_FIELD_NUMBER = 4;
    private boolean isOfficialValveServer_;
    /**
     * <code>optional bool is_official_valve_server = 4;</code>
     */
    public boolean hasIsOfficialValveServer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool is_official_valve_server = 4;</code>
     */
    public boolean getIsOfficialValveServer() {
      return isOfficialValveServer_;
    }

    public static final int IS_HLTV_FIELD_NUMBER = 5;
    private boolean isHltv_;
    /**
     * <code>optional bool is_hltv = 5;</code>
     *
     * <pre>
     * HLTV server ?
     * </pre>
     */
    public boolean hasIsHltv() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool is_hltv = 5;</code>
     *
     * <pre>
     * HLTV server ?
     * </pre>
     */
    public boolean getIsHltv() {
      return isHltv_;
    }

    public static final int IS_REPLAY_FIELD_NUMBER = 6;
    private boolean isReplay_;
    /**
     * <code>optional bool is_replay = 6;</code>
     *
     * <pre>
     * Replay server ?
     * </pre>
     */
    public boolean hasIsReplay() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool is_replay = 6;</code>
     *
     * <pre>
     * Replay server ?
     * </pre>
     */
    public boolean getIsReplay() {
      return isReplay_;
    }

    public static final int IS_REDIRECTING_TO_PROXY_RELAY_FIELD_NUMBER = 21;
    private boolean isRedirectingToProxyRelay_;
    /**
     * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
     *
     * <pre>
     * // Will be redirecting to proxy relay
     * </pre>
     */
    public boolean hasIsRedirectingToProxyRelay() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
     *
     * <pre>
     * // Will be redirecting to proxy relay
     * </pre>
     */
    public boolean getIsRedirectingToProxyRelay() {
      return isRedirectingToProxyRelay_;
    }

    public static final int C_OS_FIELD_NUMBER = 7;
    private int cOs_;
    /**
     * <code>optional int32 c_os = 7;</code>
     *
     * <pre>
     * L = linux, W = Win32
     * </pre>
     */
    public boolean hasCOs() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 c_os = 7;</code>
     *
     * <pre>
     * L = linux, W = Win32
     * </pre>
     */
    public int getCOs() {
      return cOs_;
    }

    public static final int MAP_CRC_FIELD_NUMBER = 8;
    private int mapCrc_;
    /**
     * <code>optional fixed32 map_crc = 8;</code>
     *
     * <pre>
     * server map CRC
     * </pre>
     */
    public boolean hasMapCrc() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional fixed32 map_crc = 8;</code>
     *
     * <pre>
     * server map CRC
     * </pre>
     */
    public int getMapCrc() {
      return mapCrc_;
    }

    public static final int CLIENT_CRC_FIELD_NUMBER = 9;
    private int clientCrc_;
    /**
     * <code>optional fixed32 client_crc = 9;</code>
     *
     * <pre>
     * client.dll CRC server is using
     * </pre>
     */
    public boolean hasClientCrc() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional fixed32 client_crc = 9;</code>
     *
     * <pre>
     * client.dll CRC server is using
     * </pre>
     */
    public int getClientCrc() {
      return clientCrc_;
    }

    public static final int STRING_TABLE_CRC_FIELD_NUMBER = 10;
    private int stringTableCrc_;
    /**
     * <code>optional fixed32 string_table_crc = 10;</code>
     *
     * <pre>
     * string table CRC server is using
     * </pre>
     */
    public boolean hasStringTableCrc() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional fixed32 string_table_crc = 10;</code>
     *
     * <pre>
     * string table CRC server is using
     * </pre>
     */
    public int getStringTableCrc() {
      return stringTableCrc_;
    }

    public static final int MAX_CLIENTS_FIELD_NUMBER = 11;
    private int maxClients_;
    /**
     * <code>optional int32 max_clients = 11;</code>
     *
     * <pre>
     * max number of clients on server
     * </pre>
     */
    public boolean hasMaxClients() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 max_clients = 11;</code>
     *
     * <pre>
     * max number of clients on server
     * </pre>
     */
    public int getMaxClients() {
      return maxClients_;
    }

    public static final int MAX_CLASSES_FIELD_NUMBER = 12;
    private int maxClasses_;
    /**
     * <code>optional int32 max_classes = 12;</code>
     *
     * <pre>
     * max number of server classes
     * </pre>
     */
    public boolean hasMaxClasses() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 max_classes = 12;</code>
     *
     * <pre>
     * max number of server classes
     * </pre>
     */
    public int getMaxClasses() {
      return maxClasses_;
    }

    public static final int PLAYER_SLOT_FIELD_NUMBER = 13;
    private int playerSlot_;
    /**
     * <code>optional int32 player_slot = 13;</code>
     *
     * <pre>
     * our client slot number
     * </pre>
     */
    public boolean hasPlayerSlot() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 player_slot = 13;</code>
     *
     * <pre>
     * our client slot number
     * </pre>
     */
    public int getPlayerSlot() {
      return playerSlot_;
    }

    public static final int TICK_INTERVAL_FIELD_NUMBER = 14;
    private float tickInterval_;
    /**
     * <code>optional float tick_interval = 14;</code>
     *
     * <pre>
     * server tick interval
     * </pre>
     */
    public boolean hasTickInterval() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float tick_interval = 14;</code>
     *
     * <pre>
     * server tick interval
     * </pre>
     */
    public float getTickInterval() {
      return tickInterval_;
    }

    public static final int GAME_DIR_FIELD_NUMBER = 15;
    private java.lang.Object gameDir_;
    /**
     * <code>optional string game_dir = 15;</code>
     *
     * <pre>
     * game directory eg "tf2"
     * </pre>
     */
    public boolean hasGameDir() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string game_dir = 15;</code>
     *
     * <pre>
     * game directory eg "tf2"
     * </pre>
     */
    public java.lang.String getGameDir() {
      java.lang.Object ref = gameDir_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameDir_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string game_dir = 15;</code>
     *
     * <pre>
     * game directory eg "tf2"
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGameDirBytes() {
      java.lang.Object ref = gameDir_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameDir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAP_NAME_FIELD_NUMBER = 16;
    private java.lang.Object mapName_;
    /**
     * <code>optional string map_name = 16;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    public boolean hasMapName() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string map_name = 16;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    public java.lang.String getMapName() {
      java.lang.Object ref = mapName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mapName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string map_name = 16;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapNameBytes() {
      java.lang.Object ref = mapName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAP_GROUP_NAME_FIELD_NUMBER = 17;
    private java.lang.Object mapGroupName_;
    /**
     * <code>optional string map_group_name = 17;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    public boolean hasMapGroupName() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string map_group_name = 17;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    public java.lang.String getMapGroupName() {
      java.lang.Object ref = mapGroupName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mapGroupName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string map_group_name = 17;</code>
     *
     * <pre>
     * name of current map
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMapGroupNameBytes() {
      java.lang.Object ref = mapGroupName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mapGroupName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SKY_NAME_FIELD_NUMBER = 18;
    private java.lang.Object skyName_;
    /**
     * <code>optional string sky_name = 18;</code>
     *
     * <pre>
     * name of current skybox
     * </pre>
     */
    public boolean hasSkyName() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string sky_name = 18;</code>
     *
     * <pre>
     * name of current skybox
     * </pre>
     */
    public java.lang.String getSkyName() {
      java.lang.Object ref = skyName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          skyName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sky_name = 18;</code>
     *
     * <pre>
     * name of current skybox
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSkyNameBytes() {
      java.lang.Object ref = skyName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        skyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOST_NAME_FIELD_NUMBER = 19;
    private java.lang.Object hostName_;
    /**
     * <code>optional string host_name = 19;</code>
     *
     * <pre>
     * server name
     * </pre>
     */
    public boolean hasHostName() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional string host_name = 19;</code>
     *
     * <pre>
     * server name
     * </pre>
     */
    public java.lang.String getHostName() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host_name = 19;</code>
     *
     * <pre>
     * server name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHostNameBytes() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UGC_MAP_ID_FIELD_NUMBER = 22;
    private long ugcMapId_;
    /**
     * <code>optional uint64 ugc_map_id = 22;</code>
     */
    public boolean hasUgcMapId() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint64 ugc_map_id = 22;</code>
     */
    public long getUgcMapId() {
      return ugcMapId_;
    }

    private void initFields() {
      protocol_ = 0;
      serverCount_ = 0;
      isDedicated_ = false;
      isOfficialValveServer_ = false;
      isHltv_ = false;
      isReplay_ = false;
      isRedirectingToProxyRelay_ = false;
      cOs_ = 0;
      mapCrc_ = 0;
      clientCrc_ = 0;
      stringTableCrc_ = 0;
      maxClients_ = 0;
      maxClasses_ = 0;
      playerSlot_ = 0;
      tickInterval_ = 0F;
      gameDir_ = "";
      mapName_ = "";
      mapGroupName_ = "";
      skyName_ = "";
      hostName_ = "";
      ugcMapId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, protocol_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, serverCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isDedicated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isOfficialValveServer_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, isHltv_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isReplay_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(7, cOs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(8, mapCrc_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed32(9, clientCrc_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFixed32(10, stringTableCrc_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(11, maxClients_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(12, maxClasses_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(13, playerSlot_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(14, tickInterval_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(15, getGameDirBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(16, getMapNameBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(17, getMapGroupNameBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(18, getSkyNameBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(19, getHostNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(21, isRedirectingToProxyRelay_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt64(22, ugcMapId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, protocol_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serverCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isDedicated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isOfficialValveServer_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isHltv_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isReplay_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, cOs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, mapCrc_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, clientCrc_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(10, stringTableCrc_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, maxClients_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, maxClasses_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, playerSlot_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, tickInterval_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getGameDirBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getMapNameBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getMapGroupNameBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getSkyNameBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getHostNameBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, isRedirectingToProxyRelay_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(22, ugcMapId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSVCMsg_ServerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSVCMsg_ServerInfo)
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_ServerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_ServerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo.class, skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        protocol_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isDedicated_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        isOfficialValveServer_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        isHltv_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        isReplay_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isRedirectingToProxyRelay_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        cOs_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        mapCrc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        clientCrc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        stringTableCrc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        maxClients_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        maxClasses_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        playerSlot_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        tickInterval_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        gameDir_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        mapName_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        mapGroupName_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        skyName_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        hostName_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        ugcMapId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_ServerInfo_descriptor;
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo build() {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo buildPartial() {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo result = new skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverCount_ = serverCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isDedicated_ = isDedicated_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isOfficialValveServer_ = isOfficialValveServer_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isHltv_ = isHltv_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isReplay_ = isReplay_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isRedirectingToProxyRelay_ = isRedirectingToProxyRelay_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.cOs_ = cOs_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.mapCrc_ = mapCrc_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.clientCrc_ = clientCrc_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stringTableCrc_ = stringTableCrc_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.maxClients_ = maxClients_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.maxClasses_ = maxClasses_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.playerSlot_ = playerSlot_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tickInterval_ = tickInterval_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.gameDir_ = gameDir_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.mapName_ = mapName_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.mapGroupName_ = mapGroupName_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.skyName_ = skyName_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.hostName_ = hostName_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.ugcMapId_ = ugcMapId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo) {
          return mergeFrom((skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo other) {
        if (other == skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo.getDefaultInstance()) return this;
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasServerCount()) {
          setServerCount(other.getServerCount());
        }
        if (other.hasIsDedicated()) {
          setIsDedicated(other.getIsDedicated());
        }
        if (other.hasIsOfficialValveServer()) {
          setIsOfficialValveServer(other.getIsOfficialValveServer());
        }
        if (other.hasIsHltv()) {
          setIsHltv(other.getIsHltv());
        }
        if (other.hasIsReplay()) {
          setIsReplay(other.getIsReplay());
        }
        if (other.hasIsRedirectingToProxyRelay()) {
          setIsRedirectingToProxyRelay(other.getIsRedirectingToProxyRelay());
        }
        if (other.hasCOs()) {
          setCOs(other.getCOs());
        }
        if (other.hasMapCrc()) {
          setMapCrc(other.getMapCrc());
        }
        if (other.hasClientCrc()) {
          setClientCrc(other.getClientCrc());
        }
        if (other.hasStringTableCrc()) {
          setStringTableCrc(other.getStringTableCrc());
        }
        if (other.hasMaxClients()) {
          setMaxClients(other.getMaxClients());
        }
        if (other.hasMaxClasses()) {
          setMaxClasses(other.getMaxClasses());
        }
        if (other.hasPlayerSlot()) {
          setPlayerSlot(other.getPlayerSlot());
        }
        if (other.hasTickInterval()) {
          setTickInterval(other.getTickInterval());
        }
        if (other.hasGameDir()) {
          bitField0_ |= 0x00008000;
          gameDir_ = other.gameDir_;
          onChanged();
        }
        if (other.hasMapName()) {
          bitField0_ |= 0x00010000;
          mapName_ = other.mapName_;
          onChanged();
        }
        if (other.hasMapGroupName()) {
          bitField0_ |= 0x00020000;
          mapGroupName_ = other.mapGroupName_;
          onChanged();
        }
        if (other.hasSkyName()) {
          bitField0_ |= 0x00040000;
          skyName_ = other.skyName_;
          onChanged();
        }
        if (other.hasHostName()) {
          bitField0_ |= 0x00080000;
          hostName_ = other.hostName_;
          onChanged();
        }
        if (other.hasUgcMapId()) {
          setUgcMapId(other.getUgcMapId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_ServerInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int protocol_ ;
      /**
       * <code>optional int32 protocol = 1;</code>
       *
       * <pre>
       * protocol version
       * </pre>
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 protocol = 1;</code>
       *
       * <pre>
       * protocol version
       * </pre>
       */
      public int getProtocol() {
        return protocol_;
      }
      /**
       * <code>optional int32 protocol = 1;</code>
       *
       * <pre>
       * protocol version
       * </pre>
       */
      public Builder setProtocol(int value) {
        bitField0_ |= 0x00000001;
        protocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 protocol = 1;</code>
       *
       * <pre>
       * protocol version
       * </pre>
       */
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000001);
        protocol_ = 0;
        onChanged();
        return this;
      }

      private int serverCount_ ;
      /**
       * <code>optional int32 server_count = 2;</code>
       *
       * <pre>
       * number of changelevels since server start
       * </pre>
       */
      public boolean hasServerCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 server_count = 2;</code>
       *
       * <pre>
       * number of changelevels since server start
       * </pre>
       */
      public int getServerCount() {
        return serverCount_;
      }
      /**
       * <code>optional int32 server_count = 2;</code>
       *
       * <pre>
       * number of changelevels since server start
       * </pre>
       */
      public Builder setServerCount(int value) {
        bitField0_ |= 0x00000002;
        serverCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 server_count = 2;</code>
       *
       * <pre>
       * number of changelevels since server start
       * </pre>
       */
      public Builder clearServerCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverCount_ = 0;
        onChanged();
        return this;
      }

      private boolean isDedicated_ ;
      /**
       * <code>optional bool is_dedicated = 3;</code>
       *
       * <pre>
       * dedicated server ?
       * </pre>
       */
      public boolean hasIsDedicated() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_dedicated = 3;</code>
       *
       * <pre>
       * dedicated server ?
       * </pre>
       */
      public boolean getIsDedicated() {
        return isDedicated_;
      }
      /**
       * <code>optional bool is_dedicated = 3;</code>
       *
       * <pre>
       * dedicated server ?
       * </pre>
       */
      public Builder setIsDedicated(boolean value) {
        bitField0_ |= 0x00000004;
        isDedicated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_dedicated = 3;</code>
       *
       * <pre>
       * dedicated server ?
       * </pre>
       */
      public Builder clearIsDedicated() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isDedicated_ = false;
        onChanged();
        return this;
      }

      private boolean isOfficialValveServer_ ;
      /**
       * <code>optional bool is_official_valve_server = 4;</code>
       */
      public boolean hasIsOfficialValveServer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool is_official_valve_server = 4;</code>
       */
      public boolean getIsOfficialValveServer() {
        return isOfficialValveServer_;
      }
      /**
       * <code>optional bool is_official_valve_server = 4;</code>
       */
      public Builder setIsOfficialValveServer(boolean value) {
        bitField0_ |= 0x00000008;
        isOfficialValveServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_official_valve_server = 4;</code>
       */
      public Builder clearIsOfficialValveServer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isOfficialValveServer_ = false;
        onChanged();
        return this;
      }

      private boolean isHltv_ ;
      /**
       * <code>optional bool is_hltv = 5;</code>
       *
       * <pre>
       * HLTV server ?
       * </pre>
       */
      public boolean hasIsHltv() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool is_hltv = 5;</code>
       *
       * <pre>
       * HLTV server ?
       * </pre>
       */
      public boolean getIsHltv() {
        return isHltv_;
      }
      /**
       * <code>optional bool is_hltv = 5;</code>
       *
       * <pre>
       * HLTV server ?
       * </pre>
       */
      public Builder setIsHltv(boolean value) {
        bitField0_ |= 0x00000010;
        isHltv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_hltv = 5;</code>
       *
       * <pre>
       * HLTV server ?
       * </pre>
       */
      public Builder clearIsHltv() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isHltv_ = false;
        onChanged();
        return this;
      }

      private boolean isReplay_ ;
      /**
       * <code>optional bool is_replay = 6;</code>
       *
       * <pre>
       * Replay server ?
       * </pre>
       */
      public boolean hasIsReplay() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool is_replay = 6;</code>
       *
       * <pre>
       * Replay server ?
       * </pre>
       */
      public boolean getIsReplay() {
        return isReplay_;
      }
      /**
       * <code>optional bool is_replay = 6;</code>
       *
       * <pre>
       * Replay server ?
       * </pre>
       */
      public Builder setIsReplay(boolean value) {
        bitField0_ |= 0x00000020;
        isReplay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_replay = 6;</code>
       *
       * <pre>
       * Replay server ?
       * </pre>
       */
      public Builder clearIsReplay() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isReplay_ = false;
        onChanged();
        return this;
      }

      private boolean isRedirectingToProxyRelay_ ;
      /**
       * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
       *
       * <pre>
       * // Will be redirecting to proxy relay
       * </pre>
       */
      public boolean hasIsRedirectingToProxyRelay() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
       *
       * <pre>
       * // Will be redirecting to proxy relay
       * </pre>
       */
      public boolean getIsRedirectingToProxyRelay() {
        return isRedirectingToProxyRelay_;
      }
      /**
       * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
       *
       * <pre>
       * // Will be redirecting to proxy relay
       * </pre>
       */
      public Builder setIsRedirectingToProxyRelay(boolean value) {
        bitField0_ |= 0x00000040;
        isRedirectingToProxyRelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_redirecting_to_proxy_relay = 21;</code>
       *
       * <pre>
       * // Will be redirecting to proxy relay
       * </pre>
       */
      public Builder clearIsRedirectingToProxyRelay() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isRedirectingToProxyRelay_ = false;
        onChanged();
        return this;
      }

      private int cOs_ ;
      /**
       * <code>optional int32 c_os = 7;</code>
       *
       * <pre>
       * L = linux, W = Win32
       * </pre>
       */
      public boolean hasCOs() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 c_os = 7;</code>
       *
       * <pre>
       * L = linux, W = Win32
       * </pre>
       */
      public int getCOs() {
        return cOs_;
      }
      /**
       * <code>optional int32 c_os = 7;</code>
       *
       * <pre>
       * L = linux, W = Win32
       * </pre>
       */
      public Builder setCOs(int value) {
        bitField0_ |= 0x00000080;
        cOs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 c_os = 7;</code>
       *
       * <pre>
       * L = linux, W = Win32
       * </pre>
       */
      public Builder clearCOs() {
        bitField0_ = (bitField0_ & ~0x00000080);
        cOs_ = 0;
        onChanged();
        return this;
      }

      private int mapCrc_ ;
      /**
       * <code>optional fixed32 map_crc = 8;</code>
       *
       * <pre>
       * server map CRC
       * </pre>
       */
      public boolean hasMapCrc() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional fixed32 map_crc = 8;</code>
       *
       * <pre>
       * server map CRC
       * </pre>
       */
      public int getMapCrc() {
        return mapCrc_;
      }
      /**
       * <code>optional fixed32 map_crc = 8;</code>
       *
       * <pre>
       * server map CRC
       * </pre>
       */
      public Builder setMapCrc(int value) {
        bitField0_ |= 0x00000100;
        mapCrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 map_crc = 8;</code>
       *
       * <pre>
       * server map CRC
       * </pre>
       */
      public Builder clearMapCrc() {
        bitField0_ = (bitField0_ & ~0x00000100);
        mapCrc_ = 0;
        onChanged();
        return this;
      }

      private int clientCrc_ ;
      /**
       * <code>optional fixed32 client_crc = 9;</code>
       *
       * <pre>
       * client.dll CRC server is using
       * </pre>
       */
      public boolean hasClientCrc() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed32 client_crc = 9;</code>
       *
       * <pre>
       * client.dll CRC server is using
       * </pre>
       */
      public int getClientCrc() {
        return clientCrc_;
      }
      /**
       * <code>optional fixed32 client_crc = 9;</code>
       *
       * <pre>
       * client.dll CRC server is using
       * </pre>
       */
      public Builder setClientCrc(int value) {
        bitField0_ |= 0x00000200;
        clientCrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 client_crc = 9;</code>
       *
       * <pre>
       * client.dll CRC server is using
       * </pre>
       */
      public Builder clearClientCrc() {
        bitField0_ = (bitField0_ & ~0x00000200);
        clientCrc_ = 0;
        onChanged();
        return this;
      }

      private int stringTableCrc_ ;
      /**
       * <code>optional fixed32 string_table_crc = 10;</code>
       *
       * <pre>
       * string table CRC server is using
       * </pre>
       */
      public boolean hasStringTableCrc() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional fixed32 string_table_crc = 10;</code>
       *
       * <pre>
       * string table CRC server is using
       * </pre>
       */
      public int getStringTableCrc() {
        return stringTableCrc_;
      }
      /**
       * <code>optional fixed32 string_table_crc = 10;</code>
       *
       * <pre>
       * string table CRC server is using
       * </pre>
       */
      public Builder setStringTableCrc(int value) {
        bitField0_ |= 0x00000400;
        stringTableCrc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 string_table_crc = 10;</code>
       *
       * <pre>
       * string table CRC server is using
       * </pre>
       */
      public Builder clearStringTableCrc() {
        bitField0_ = (bitField0_ & ~0x00000400);
        stringTableCrc_ = 0;
        onChanged();
        return this;
      }

      private int maxClients_ ;
      /**
       * <code>optional int32 max_clients = 11;</code>
       *
       * <pre>
       * max number of clients on server
       * </pre>
       */
      public boolean hasMaxClients() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 max_clients = 11;</code>
       *
       * <pre>
       * max number of clients on server
       * </pre>
       */
      public int getMaxClients() {
        return maxClients_;
      }
      /**
       * <code>optional int32 max_clients = 11;</code>
       *
       * <pre>
       * max number of clients on server
       * </pre>
       */
      public Builder setMaxClients(int value) {
        bitField0_ |= 0x00000800;
        maxClients_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_clients = 11;</code>
       *
       * <pre>
       * max number of clients on server
       * </pre>
       */
      public Builder clearMaxClients() {
        bitField0_ = (bitField0_ & ~0x00000800);
        maxClients_ = 0;
        onChanged();
        return this;
      }

      private int maxClasses_ ;
      /**
       * <code>optional int32 max_classes = 12;</code>
       *
       * <pre>
       * max number of server classes
       * </pre>
       */
      public boolean hasMaxClasses() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 max_classes = 12;</code>
       *
       * <pre>
       * max number of server classes
       * </pre>
       */
      public int getMaxClasses() {
        return maxClasses_;
      }
      /**
       * <code>optional int32 max_classes = 12;</code>
       *
       * <pre>
       * max number of server classes
       * </pre>
       */
      public Builder setMaxClasses(int value) {
        bitField0_ |= 0x00001000;
        maxClasses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_classes = 12;</code>
       *
       * <pre>
       * max number of server classes
       * </pre>
       */
      public Builder clearMaxClasses() {
        bitField0_ = (bitField0_ & ~0x00001000);
        maxClasses_ = 0;
        onChanged();
        return this;
      }

      private int playerSlot_ ;
      /**
       * <code>optional int32 player_slot = 13;</code>
       *
       * <pre>
       * our client slot number
       * </pre>
       */
      public boolean hasPlayerSlot() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 player_slot = 13;</code>
       *
       * <pre>
       * our client slot number
       * </pre>
       */
      public int getPlayerSlot() {
        return playerSlot_;
      }
      /**
       * <code>optional int32 player_slot = 13;</code>
       *
       * <pre>
       * our client slot number
       * </pre>
       */
      public Builder setPlayerSlot(int value) {
        bitField0_ |= 0x00002000;
        playerSlot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_slot = 13;</code>
       *
       * <pre>
       * our client slot number
       * </pre>
       */
      public Builder clearPlayerSlot() {
        bitField0_ = (bitField0_ & ~0x00002000);
        playerSlot_ = 0;
        onChanged();
        return this;
      }

      private float tickInterval_ ;
      /**
       * <code>optional float tick_interval = 14;</code>
       *
       * <pre>
       * server tick interval
       * </pre>
       */
      public boolean hasTickInterval() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float tick_interval = 14;</code>
       *
       * <pre>
       * server tick interval
       * </pre>
       */
      public float getTickInterval() {
        return tickInterval_;
      }
      /**
       * <code>optional float tick_interval = 14;</code>
       *
       * <pre>
       * server tick interval
       * </pre>
       */
      public Builder setTickInterval(float value) {
        bitField0_ |= 0x00004000;
        tickInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float tick_interval = 14;</code>
       *
       * <pre>
       * server tick interval
       * </pre>
       */
      public Builder clearTickInterval() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tickInterval_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object gameDir_ = "";
      /**
       * <code>optional string game_dir = 15;</code>
       *
       * <pre>
       * game directory eg "tf2"
       * </pre>
       */
      public boolean hasGameDir() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string game_dir = 15;</code>
       *
       * <pre>
       * game directory eg "tf2"
       * </pre>
       */
      public java.lang.String getGameDir() {
        java.lang.Object ref = gameDir_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gameDir_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string game_dir = 15;</code>
       *
       * <pre>
       * game directory eg "tf2"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGameDirBytes() {
        java.lang.Object ref = gameDir_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameDir_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string game_dir = 15;</code>
       *
       * <pre>
       * game directory eg "tf2"
       * </pre>
       */
      public Builder setGameDir(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        gameDir_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_dir = 15;</code>
       *
       * <pre>
       * game directory eg "tf2"
       * </pre>
       */
      public Builder clearGameDir() {
        bitField0_ = (bitField0_ & ~0x00008000);
        gameDir_ = getDefaultInstance().getGameDir();
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_dir = 15;</code>
       *
       * <pre>
       * game directory eg "tf2"
       * </pre>
       */
      public Builder setGameDirBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        gameDir_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mapName_ = "";
      /**
       * <code>optional string map_name = 16;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public boolean hasMapName() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string map_name = 16;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public java.lang.String getMapName() {
        java.lang.Object ref = mapName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mapName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string map_name = 16;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapNameBytes() {
        java.lang.Object ref = mapName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string map_name = 16;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public Builder setMapName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        mapName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string map_name = 16;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public Builder clearMapName() {
        bitField0_ = (bitField0_ & ~0x00010000);
        mapName_ = getDefaultInstance().getMapName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string map_name = 16;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public Builder setMapNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        mapName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mapGroupName_ = "";
      /**
       * <code>optional string map_group_name = 17;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public boolean hasMapGroupName() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string map_group_name = 17;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public java.lang.String getMapGroupName() {
        java.lang.Object ref = mapGroupName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mapGroupName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string map_group_name = 17;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMapGroupNameBytes() {
        java.lang.Object ref = mapGroupName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapGroupName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string map_group_name = 17;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public Builder setMapGroupName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        mapGroupName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string map_group_name = 17;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public Builder clearMapGroupName() {
        bitField0_ = (bitField0_ & ~0x00020000);
        mapGroupName_ = getDefaultInstance().getMapGroupName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string map_group_name = 17;</code>
       *
       * <pre>
       * name of current map
       * </pre>
       */
      public Builder setMapGroupNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        mapGroupName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object skyName_ = "";
      /**
       * <code>optional string sky_name = 18;</code>
       *
       * <pre>
       * name of current skybox
       * </pre>
       */
      public boolean hasSkyName() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string sky_name = 18;</code>
       *
       * <pre>
       * name of current skybox
       * </pre>
       */
      public java.lang.String getSkyName() {
        java.lang.Object ref = skyName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            skyName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sky_name = 18;</code>
       *
       * <pre>
       * name of current skybox
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSkyNameBytes() {
        java.lang.Object ref = skyName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          skyName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sky_name = 18;</code>
       *
       * <pre>
       * name of current skybox
       * </pre>
       */
      public Builder setSkyName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        skyName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sky_name = 18;</code>
       *
       * <pre>
       * name of current skybox
       * </pre>
       */
      public Builder clearSkyName() {
        bitField0_ = (bitField0_ & ~0x00040000);
        skyName_ = getDefaultInstance().getSkyName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sky_name = 18;</code>
       *
       * <pre>
       * name of current skybox
       * </pre>
       */
      public Builder setSkyNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        skyName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object hostName_ = "";
      /**
       * <code>optional string host_name = 19;</code>
       *
       * <pre>
       * server name
       * </pre>
       */
      public boolean hasHostName() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional string host_name = 19;</code>
       *
       * <pre>
       * server name
       * </pre>
       */
      public java.lang.String getHostName() {
        java.lang.Object ref = hostName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hostName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host_name = 19;</code>
       *
       * <pre>
       * server name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHostNameBytes() {
        java.lang.Object ref = hostName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host_name = 19;</code>
       *
       * <pre>
       * server name
       * </pre>
       */
      public Builder setHostName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        hostName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host_name = 19;</code>
       *
       * <pre>
       * server name
       * </pre>
       */
      public Builder clearHostName() {
        bitField0_ = (bitField0_ & ~0x00080000);
        hostName_ = getDefaultInstance().getHostName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host_name = 19;</code>
       *
       * <pre>
       * server name
       * </pre>
       */
      public Builder setHostNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        hostName_ = value;
        onChanged();
        return this;
      }

      private long ugcMapId_ ;
      /**
       * <code>optional uint64 ugc_map_id = 22;</code>
       */
      public boolean hasUgcMapId() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint64 ugc_map_id = 22;</code>
       */
      public long getUgcMapId() {
        return ugcMapId_;
      }
      /**
       * <code>optional uint64 ugc_map_id = 22;</code>
       */
      public Builder setUgcMapId(long value) {
        bitField0_ |= 0x00100000;
        ugcMapId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ugc_map_id = 22;</code>
       */
      public Builder clearUgcMapId() {
        bitField0_ = (bitField0_ & ~0x00100000);
        ugcMapId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSVCMsg_ServerInfo)
    }

    static {
      defaultInstance = new CSVCMsg_ServerInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSVCMsg_ServerInfo)
  }

  public interface CSVCMsg_CmdKeyValuesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSVCMsg_CmdKeyValues)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes keyvalues = 1;</code>
     */
    boolean hasKeyvalues();
    /**
     * <code>optional bytes keyvalues = 1;</code>
     */
    com.google.protobuf.ByteString getKeyvalues();
  }
  /**
   * Protobuf type {@code CSVCMsg_CmdKeyValues}
   */
  public static final class CSVCMsg_CmdKeyValues extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CSVCMsg_CmdKeyValues)
      CSVCMsg_CmdKeyValuesOrBuilder {
    // Use CSVCMsg_CmdKeyValues.newBuilder() to construct.
    private CSVCMsg_CmdKeyValues(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSVCMsg_CmdKeyValues(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSVCMsg_CmdKeyValues defaultInstance;
    public static CSVCMsg_CmdKeyValues getDefaultInstance() {
      return defaultInstance;
    }

    public CSVCMsg_CmdKeyValues getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSVCMsg_CmdKeyValues(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              keyvalues_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_CmdKeyValues_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_CmdKeyValues_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues.class, skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues.Builder.class);
    }

    public static com.google.protobuf.Parser<CSVCMsg_CmdKeyValues> PARSER =
        new com.google.protobuf.AbstractParser<CSVCMsg_CmdKeyValues>() {
      public CSVCMsg_CmdKeyValues parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSVCMsg_CmdKeyValues(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSVCMsg_CmdKeyValues> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEYVALUES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString keyvalues_;
    /**
     * <code>optional bytes keyvalues = 1;</code>
     */
    public boolean hasKeyvalues() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes keyvalues = 1;</code>
     */
    public com.google.protobuf.ByteString getKeyvalues() {
      return keyvalues_;
    }

    private void initFields() {
      keyvalues_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, keyvalues_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, keyvalues_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSVCMsg_CmdKeyValues}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSVCMsg_CmdKeyValues)
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValuesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_CmdKeyValues_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_CmdKeyValues_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues.class, skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyvalues_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_CmdKeyValues_descriptor;
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues build() {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues buildPartial() {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues result = new skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyvalues_ = keyvalues_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues) {
          return mergeFrom((skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues other) {
        if (other == skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues.getDefaultInstance()) return this;
        if (other.hasKeyvalues()) {
          setKeyvalues(other.getKeyvalues());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_CmdKeyValues) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString keyvalues_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes keyvalues = 1;</code>
       */
      public boolean hasKeyvalues() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes keyvalues = 1;</code>
       */
      public com.google.protobuf.ByteString getKeyvalues() {
        return keyvalues_;
      }
      /**
       * <code>optional bytes keyvalues = 1;</code>
       */
      public Builder setKeyvalues(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyvalues_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes keyvalues = 1;</code>
       */
      public Builder clearKeyvalues() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyvalues_ = getDefaultInstance().getKeyvalues();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSVCMsg_CmdKeyValues)
    }

    static {
      defaultInstance = new CSVCMsg_CmdKeyValues(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSVCMsg_CmdKeyValues)
  }

  public interface CSVCMsg_EncryptedDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSVCMsg_EncryptedData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes encrypted = 1;</code>
     */
    boolean hasEncrypted();
    /**
     * <code>optional bytes encrypted = 1;</code>
     */
    com.google.protobuf.ByteString getEncrypted();

    /**
     * <code>optional int32 key_type = 2;</code>
     */
    boolean hasKeyType();
    /**
     * <code>optional int32 key_type = 2;</code>
     */
    int getKeyType();
  }
  /**
   * Protobuf type {@code CSVCMsg_EncryptedData}
   */
  public static final class CSVCMsg_EncryptedData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CSVCMsg_EncryptedData)
      CSVCMsg_EncryptedDataOrBuilder {
    // Use CSVCMsg_EncryptedData.newBuilder() to construct.
    private CSVCMsg_EncryptedData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSVCMsg_EncryptedData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSVCMsg_EncryptedData defaultInstance;
    public static CSVCMsg_EncryptedData getDefaultInstance() {
      return defaultInstance;
    }

    public CSVCMsg_EncryptedData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSVCMsg_EncryptedData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              encrypted_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              keyType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_EncryptedData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_EncryptedData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData.class, skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData.Builder.class);
    }

    public static com.google.protobuf.Parser<CSVCMsg_EncryptedData> PARSER =
        new com.google.protobuf.AbstractParser<CSVCMsg_EncryptedData>() {
      public CSVCMsg_EncryptedData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSVCMsg_EncryptedData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSVCMsg_EncryptedData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENCRYPTED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encrypted_;
    /**
     * <code>optional bytes encrypted = 1;</code>
     */
    public boolean hasEncrypted() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes encrypted = 1;</code>
     */
    public com.google.protobuf.ByteString getEncrypted() {
      return encrypted_;
    }

    public static final int KEY_TYPE_FIELD_NUMBER = 2;
    private int keyType_;
    /**
     * <code>optional int32 key_type = 2;</code>
     */
    public boolean hasKeyType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 key_type = 2;</code>
     */
    public int getKeyType() {
      return keyType_;
    }

    private void initFields() {
      encrypted_ = com.google.protobuf.ByteString.EMPTY;
      keyType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, encrypted_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, keyType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, encrypted_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, keyType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSVCMsg_EncryptedData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSVCMsg_EncryptedData)
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_EncryptedData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_EncryptedData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData.class, skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        encrypted_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        keyType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.internal_static_CSVCMsg_EncryptedData_descriptor;
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData build() {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData buildPartial() {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData result = new skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.encrypted_ = encrypted_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.keyType_ = keyType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData) {
          return mergeFrom((skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData other) {
        if (other == skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData.getDefaultInstance()) return this;
        if (other.hasEncrypted()) {
          setEncrypted(other.getEncrypted());
        }
        if (other.hasKeyType()) {
          setKeyType(other.getKeyType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.proto.CsGoNetMessages.CSVCMsg_EncryptedData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString encrypted_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes encrypted = 1;</code>
       */
      public boolean hasEncrypted() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes encrypted = 1;</code>
       */
      public com.google.protobuf.ByteString getEncrypted() {
        return encrypted_;
      }
      /**
       * <code>optional bytes encrypted = 1;</code>
       */
      public Builder setEncrypted(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        encrypted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes encrypted = 1;</code>
       */
      public Builder clearEncrypted() {
        bitField0_ = (bitField0_ & ~0x00000001);
        encrypted_ = getDefaultInstance().getEncrypted();
        onChanged();
        return this;
      }

      private int keyType_ ;
      /**
       * <code>optional int32 key_type = 2;</code>
       */
      public boolean hasKeyType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 key_type = 2;</code>
       */
      public int getKeyType() {
        return keyType_;
      }
      /**
       * <code>optional int32 key_type = 2;</code>
       */
      public Builder setKeyType(int value) {
        bitField0_ |= 0x00000002;
        keyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 key_type = 2;</code>
       */
      public Builder clearKeyType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        keyType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSVCMsg_EncryptedData)
    }

    static {
      defaultInstance = new CSVCMsg_EncryptedData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSVCMsg_EncryptedData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSVCMsg_ServerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSVCMsg_ServerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSVCMsg_CmdKeyValues_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSVCMsg_CmdKeyValues_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSVCMsg_EncryptedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSVCMsg_EncryptedData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026csgo_netmessages.proto\"\327\003\n\022CSVCMsg_Ser" +
      "verInfo\022\020\n\010protocol\030\001 \001(\005\022\024\n\014server_coun" +
      "t\030\002 \001(\005\022\024\n\014is_dedicated\030\003 \001(\010\022 \n\030is_offi" +
      "cial_valve_server\030\004 \001(\010\022\017\n\007is_hltv\030\005 \001(\010" +
      "\022\021\n\tis_replay\030\006 \001(\010\022%\n\035is_redirecting_to" +
      "_proxy_relay\030\025 \001(\010\022\014\n\004c_os\030\007 \001(\005\022\017\n\007map_" +
      "crc\030\010 \001(\007\022\022\n\nclient_crc\030\t \001(\007\022\030\n\020string_" +
      "table_crc\030\n \001(\007\022\023\n\013max_clients\030\013 \001(\005\022\023\n\013" +
      "max_classes\030\014 \001(\005\022\023\n\013player_slot\030\r \001(\005\022\025" +
      "\n\rtick_interval\030\016 \001(\002\022\020\n\010game_dir\030\017 \001(\t\022",
      "\020\n\010map_name\030\020 \001(\t\022\026\n\016map_group_name\030\021 \001(" +
      "\t\022\020\n\010sky_name\030\022 \001(\t\022\021\n\thost_name\030\023 \001(\t\022\022" +
      "\n\nugc_map_id\030\026 \001(\004\")\n\024CSVCMsg_CmdKeyValu" +
      "es\022\021\n\tkeyvalues\030\001 \001(\014\"<\n\025CSVCMsg_Encrypt" +
      "edData\022\021\n\tencrypted\030\001 \001(\014\022\020\n\010key_type\030\002 " +
      "\001(\005*\205\001\n\021SVC_Messages_CsGo\022\024\n\020svc_Paintma" +
      "pData\020!\022\024\n\020svc_CmdKeyValues\020\"\022\025\n\021svc_Enc" +
      "ryptedData\020#\022\022\n\016svc_HltvReplay\020$\022\031\n\025svc_" +
      "Broadcast_Command\020&B8\n\"skadistats.clarit" +
      "y.wire.csgo.protoB\017CsGoNetMessages\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_CSVCMsg_ServerInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CSVCMsg_ServerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CSVCMsg_ServerInfo_descriptor,
        new java.lang.String[] { "Protocol", "ServerCount", "IsDedicated", "IsOfficialValveServer", "IsHltv", "IsReplay", "IsRedirectingToProxyRelay", "COs", "MapCrc", "ClientCrc", "StringTableCrc", "MaxClients", "MaxClasses", "PlayerSlot", "TickInterval", "GameDir", "MapName", "MapGroupName", "SkyName", "HostName", "UgcMapId", });
    internal_static_CSVCMsg_CmdKeyValues_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CSVCMsg_CmdKeyValues_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CSVCMsg_CmdKeyValues_descriptor,
        new java.lang.String[] { "Keyvalues", });
    internal_static_CSVCMsg_EncryptedData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CSVCMsg_EncryptedData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CSVCMsg_EncryptedData_descriptor,
        new java.lang.String[] { "Encrypted", "KeyType", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
